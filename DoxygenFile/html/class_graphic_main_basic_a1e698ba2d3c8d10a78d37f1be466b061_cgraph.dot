digraph "GraphicMainBasic::Draw"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="GraphicMainBasic::Draw",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="描画を行う．ここでは描画系の処理のみを行い内部のデータを更新しないためconstを付けている．純粋仮想関数．"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CameraGui::Draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_gui.html#ada26678aa63e5091de5d1ae4e4ec3e9a",tooltip="GUIの描画を行う"];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="DisplayNodeSwitchGui\l::Draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_display_node_switch_gui.html#a6be29aa4d678251cb1fe8b507ace0064",tooltip="GUIの描画"];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="HexapodRenderer::Draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_renderer.html#a8eae43f9a83c964275d97cd9c73d9451",tooltip="ロボットを3D空間に描画する．"];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="designlab::dxlib_util\l::ConvertToDxlibVec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedesignlab_1_1dxlib__util.html#a6873d18685f86e3d6c7675898830c6f0",tooltip="Dxlibの座標を示すVECTORと，このプログラムで使用しているVectorを変換する．   ロボット座標系は右手座標系，Dxlibは左手座標系(工学は右手・ゲームライブラリは左手が多い気がする)なの..."];
  Node4 -> Node6 [id="edge5_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="designlab::dxlib_util\l::DrawHexagonalPrism",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedesignlab_1_1dxlib__util.html#ad8cc0ecb50fc678af0d50370a137356e",tooltip="3D空間に六角柱を描画する．"];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="designlab::dxlib_util\l::DrawHexagon",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedesignlab_1_1dxlib__util.html#aa8892901793b338c6a643dc12d19a99e",tooltip="3D空間に六角形を描画する．各点は同一平面上にあるものにしないと，描画が歪む．"];
  Node4 -> Node8 [id="edge7_Node000004_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="designlab::math_util\l::IsEqual",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedesignlab_1_1math__util.html#a44a42787b2445c454d3afed817c1769e",tooltip="C++において，小数同士の計算は誤差が出てしまう．誤差込みで値が等しいか調べる．"];
  Node4 -> Node9 [id="edge8_Node000004_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="designlab::leg_func\l::IsGrounded",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedesignlab_1_1leg__func.html#a4b87ebe130ffec4a53e929bdb13c4ee3",tooltip="脚番号 leg_index 0 〜 5 に応じて，その脚が接地しているかを調べる．   脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．"];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="NodeDisplayGui::Draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_node_display_gui.html#a839b67b1b96859f8ad23b00a56c2997d",tooltip="GUIの表示を行う"];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="WorldGridRenderer::Draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_world_grid_renderer.html#af26f74852d21ad5bbdc17114cc69fb0c",tooltip="ワールドの格子線を描画する"];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="MapRenderer::Draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_renderer.html#a7f66eb64de0ae30b8aec6b22484f7762",tooltip="マップの描画を行う．"];
  Node12 -> Node5 [id="edge12_Node000012_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node13 [id="edge13_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="designlab::dxlib_util\l::DrawCube3DWithTopPos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedesignlab_1_1dxlib__util.html#a170cac2fc964414af49c550aee6583c8",tooltip="3D空間に立方体を描画する．立方体の上面の中心の座標から描画する．"];
  Node13 -> Node14 [id="edge14_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="designlab::dxlib_util\l::DrawCube3D",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedesignlab_1_1dxlib__util.html#aec08fe28b57053d60e3085bd20ce8b25",tooltip="3D空間に立方体を描画する．"];
  Node12 -> Node15 [id="edge15_Node000012_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="MapState::GetMapPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_state.html#a48e77403dbad5738f2cd449ebc51275c",tooltip="脚設置可能点の座標を返す．"];
  Node12 -> Node16 [id="edge16_Node000012_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="MapState::GetMapPointSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_state.html#af1cbbeb3eb577b1c3530a43c57028dec",tooltip="脚設置可能点の総数を返す．"];
  Node1 -> Node17 [id="edge17_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="StabilityMarginRenderer\l::Draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_stability_margin_renderer.html#aa49922b8aa57afbb10acd08a0a5efd40",tooltip="ロボットの静的安定余裕(支持脚多角形)を描画する．"];
  Node17 -> Node18 [id="edge18_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="designlab::Polygon2\l::AddVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdesignlab_1_1_polygon2.html#a1ecd8437967c9a9c68d8b580406ca299",tooltip="頂点を追加する関数"];
  Node17 -> Node5 [id="edge19_Node000017_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node9 [id="edge20_Node000017_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node19 [id="edge21_Node000017_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="designlab::Polygon2\l::IsInside",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdesignlab_1_1_polygon2.html#a3965642438156b1b86dfea1d76beaa53",tooltip="点が多角形の内部にあるかどうか調べる関数．多角形が凸でない場合は正しく判定できない．"];
  Node19 -> Node20 [id="edge22_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="designlab::Polygon2\l::GetVertexNum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdesignlab_1_1_polygon2.html#a5325a59337947d2b61e055431f2ce3f3",tooltip="多角形の頂点数を返す関数"];
  Node17 -> Node21 [id="edge23_Node000017_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="designlab::Vector3\l::ProjectedXY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdesignlab_1_1_vector3.html#a3f278dfeaf16db1a9635bd4e3eecf6ed",tooltip="XY平面に射影したベクトルを返す．"];
  Node1 -> Node22 [id="edge24_Node000001_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="MovementLocusRenderer\l::Draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_movement_locus_renderer.html#a612f13f7426af1679fbb004fe612c9c6",tooltip="ロボットの移動軌跡を描画する．"];
  Node22 -> Node5 [id="edge25_Node000022_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node23 [id="edge26_Node000001_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="RobotGraundPointRenderer\l::Draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_robot_graund_point_renderer.html#ab29a09c0c523164d7d15195fc13eedd7",tooltip=" "];
  Node23 -> Node5 [id="edge27_Node000023_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node13 [id="edge28_Node000023_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node24 [id="edge29_Node000001_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="DisplayNodeSwitchGui\l::getSimulationNum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_display_node_switch_gui.html#a7b3423582511df09f935571d695e6c21",tooltip="現在表示するシミュレーションの番号を取得する"];
  Node1 -> Node25 [id="edge30_Node000001_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="designlab::dxlib_util\l::SetZBufferEnable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedesignlab_1_1dxlib__util.html#a5f59136031be16081cffcef06767b9e5",tooltip="デフォルトだと描画処理を書いた順に描画されるが，これをZバッファを使用して奥行きを考慮して描画するようにする．   なんか毎フレーム実行しなきゃいけないっぽい？仕様がよくわからん"];
}
