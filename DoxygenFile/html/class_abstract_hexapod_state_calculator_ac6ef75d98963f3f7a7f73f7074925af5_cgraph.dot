digraph "AbstractHexapodStateCalculator::calcStabilityMargin"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="AbstractHexapodStateCalculator\l::calcStabilityMargin",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="【スレッドセーフ】安定余裕(Stability Margin))を計算する．詳しくは「不整地における歩行機械の静的安定性評価基準」という論文を読んで欲しい   接地脚を繋いで作られる多角形の辺と重心の距..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="designlab::Vector2\l::Cross",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdesignlab_1_1_vector2.html#ad4dbe99350225f345d3f9dba83480dca",tooltip="このベクトルとotherの外積を返す"];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="AbstractHexapodStateCalculator\l::getLocalLegBasePosition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_abstract_hexapod_state_calculator.html#a6d663fef2c7956b03eaceced6ed77a26",tooltip="【スレッドセーフ】脚の付け根の座標( leg base position)を取得する．ローカル(ロボット)座標系"];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="AbstractHexapodStateCalculator\l::checkLegIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_abstract_hexapod_state_calculator.html#a18c304b7036e49a272be24dd1792975f",tooltip="脚番号のチェックを行う．constexprなので，コンパイル時にチェックされる．"];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="dl_leg::IsGrounded",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__leg.html#af9f9b0788c3b3049e8bbf659df946c20",tooltip="脚番号 leg_index 0 〜 5 に応じて，その脚が接地しているかを調べる．   脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．"];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="designlab::Vector2\l::Normalized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdesignlab_1_1_vector2.html#a5e5ac52da083256f0c976aa89b552393",tooltip="このベクトルを正規化したベクトルを返す"];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="designlab::math_util\l::IsEqual",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedesignlab_1_1math__util.html#a44a42787b2445c454d3afed817c1769e",tooltip="C++において，小数同士の計算は誤差が出てしまう．誤差込みで値が等しいか調べる．"];
  Node6 -> Node8 [id="edge7_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="designlab::Vector2\l::Length",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdesignlab_1_1_vector2.html#a93efc08761d0e68557fa4bcccacba843",tooltip="このベクトルの長さを返す"];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="designlab::Vector2\l::LengthSquare",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structdesignlab_1_1_vector2.html#a87dd9fc675e7648a5c22d9c01d79c63b",tooltip="このベクトルの長さの2乗を返す"];
}
