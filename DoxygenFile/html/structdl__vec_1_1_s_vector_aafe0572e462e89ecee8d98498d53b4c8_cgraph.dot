digraph "dl_vec::SVector::normalized"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="dl_vec::SVector::normalized",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="単位ベクトルを返す．normalizeとは，ベクトルを正規化（単位ベクトルに変換）する操作を表す．絶対値が0のベクトルを使用しないこと!"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="dl_vec::SVector::length",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_vector.html#ae3995a28af45772ee7593b40979e8561",tooltip="ベクトルの長さを返す．sqrt(ルートの計算)がまぁまぁ重いので，lengthSquareでいいならこっち使うべき．"];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="dl_vec::SVector::lengthSquare",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_vector.html#a4420023e744314ef6d41f21fbd204150",tooltip="ベクトルの長さの2乗を返す．sqrt(ルートの計算)がまぁまぁ重いのでこっちを使えるなら使うべき．"];
}
