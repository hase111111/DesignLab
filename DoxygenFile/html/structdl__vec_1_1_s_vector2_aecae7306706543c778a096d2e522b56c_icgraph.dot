digraph "dl_vec::SVector2::cross"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="dl_vec::SVector2::cross",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="このベクトルとotherの外積を返す"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="HexapodStateCalclator\l::calculateStaticMargin",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a198fd1c8a9ec7f3f68816578eb34f62c",tooltip="静的安定余裕を計算する．"];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="HexapodRenderer::draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_renderer.html#ada03952583267029a71d57500ec11b70",tooltip="ロボットを3D空間に描画する．"];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="GraphicMainBasic::draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_graphic_main_basic.html#ada25886ad88e0cfeeef64e90ff87dbbd",tooltip="描画を行う．ここでは描画系の処理のみを行い内部のデータを更新しないためconstを付けている．純粋仮想関数．"];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="GraphicMainGraphViewer\l::draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_graphic_main_graph_viewer.html#a7f964f335a3056e101dc8b27b3b26b8a",tooltip="描画を行う．ここでは描画系の処理のみを行い内部のデータを更新しないためconstを付けている．純粋仮想関数．"];
  Node3 -> Node6 [id="edge5_Node000003_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="GraphicMainTest::draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_graphic_main_test.html#a1594f9f66c5fb8fa9a67787463b0c7f5",tooltip="描画を行う．ここでは描画系の処理のみを行い内部のデータを更新しないためconstを付けている．純粋仮想関数．"];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="dl_vec::SLine2::getIntersection",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_line2.html#a7bb037f1649dd2d00d0868fc3fa7a6ec",tooltip="他の線分との交点を求める．"];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="dl_vec::SLine2::hasIntersection",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_line2.html#a0638a23cbcc936eb65e284ceca113702",tooltip="交点が存在しているかどうか調べる関数"];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="HexapodStateCalclator\l::isLegInterfering",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a4b7626cfcaab44e79148c5f5b4acd30f",tooltip="脚の干渉をチェックする．"];
  Node9 -> Node3 [id="edge9_Node000009_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node10 [id="edge10_Node000009_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="ComSelecter::getComFromPolygon",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_com_selecter.html#a362bc2b2bba3c9933c01de9c90687691",tooltip="重心を求める"];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="HexapodStateCalclator\l::isAblePause",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a5e34910a6da418efdc1e1632672f15e7",tooltip="転ばない姿勢かどうか調べる．"];
  Node12 -> Node13 [id="edge12_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="LegUpDownNodeCreator\l::create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_leg_up_down_node_creator.html#a198455a2bb8511c2d77332cae7c4837d",tooltip="重心を平行移動したノードを生成する"];
  Node12 -> Node14 [id="edge13_Node000012_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="LegUpNodeCreator::create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_leg_up_node_creator.html#a8fcdcc64f2e29299e392dcf1a2ecd2d0",tooltip="重心を平行移動したノードを生成する"];
  Node12 -> Node3 [id="edge14_Node000012_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node10 [id="edge15_Node000012_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
