digraph "ComMoveNodeCreatorHato::create"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="ComMoveNodeCreatorHato\l::create",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="重心を平行移動したノードを生成する"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="dl_leg::changeComPattern",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__leg.html#a1130c749c855ff4a443171a56a0affe8",tooltip="重心のデータを変更する．"];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="ComType::convertComPattern\lToBit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_com_type.html#ad68857d4fdd3fc1a4c31631655e388a4",tooltip="重心パターンをbitに変換する関数"];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="SNode::changeGlobalCenter\lOfMass",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct_s_node.html#a76fd4ec299b81b6f7c1f274084236d8f",tooltip="重心位置を変更する関数．"];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="dl_leg::isGrounded",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__leg.html#ad9c7dd2eccb0f1660b81a56b17b889c3",tooltip="脚番号_leg_num 0 〜 5 に応じて，その脚が接地しているかを調べる． 脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．"];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="dl_leg::isAbleLegNum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__leg.html#ab2ec160a0610763bdbc702363c0c6267",tooltip="脚を表す番号は，右前脚を 0 として， 0 〜 5 の範囲．その範囲外ならばfalseを返す．"];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="SNode::changeNextNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct_s_node.html#a99876a79a2e973f64a25fb72210086b0",tooltip="次の動作を設定する関数．"];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="ComSelecterHato::getComFrom\lPolygon",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_com_selecter_hato.html#a5d197b3f6d2759a435d357e67e700d2e",tooltip="重心を求める"];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="dl_vec::SPolygon2::\lgetVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_polygon2.html#a0a42d131245cae925ca34723233090c9",tooltip="頂点の座標を返す関数"];
  Node9 -> Node10 [id="edge9_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="dl_vec::SPolygon2::\lgetVertexNum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_polygon2.html#a8e2e67f29a3f1aaa0570ee717202d170",tooltip="多角形の頂点数を返す関数"];
  Node8 -> Node10 [id="edge10_Node000008_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node5 [id="edge11_Node000008_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node11 [id="edge12_Node000008_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="HexapodStateCalclator\l::isLegInRange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a44b81247eee6784742703a394716739d",tooltip="脚が可動範囲内かチェックする．速度重視のため，ざっくりとした計算を行う．"];
  Node11 -> Node12 [id="edge13_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="dl_vec::SVector2::length\lSquare",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structdl__vec_1_1_s_vector2.html#a0ae9aed0d5f24a33178262e127c628e8",tooltip="このベクトルの長さの2乗を返す"];
  Node11 -> Node14 [id="edge14_Node000011_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="dl_vec::SVector::projectedXY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_vector.html#ab51d1e8d247fffbd26c1127be0976e43",tooltip="XY平面に射影したベクトルを返す．"];
  Node11 -> Node15 [id="edge15_Node000011_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="dl_math::squared",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__math.html#a760dc9f3f17fe8b38291f79da372095b",tooltip="2乗した値を返す関数．"];
  Node8 -> Node16 [id="edge16_Node000008_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="dl_vec::SVector2::normalized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_vector2.html#af7c76f35399bde9f63c1dfc19b6da657",tooltip="このベクトルを正規化したベクトルを返す"];
  Node16 -> Node17 [id="edge17_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="dl_vec::SVector2::length",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_vector2.html#ab72c9ccc774276e2c24dee7a7174a867",tooltip="このベクトルの長さを返す"];
  Node17 -> Node12 [id="edge18_Node000017_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node18 [id="edge19_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="ComCandidatePolygonMaker\l::makeCandidatePolygon",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_com_candidate_polygon_maker.html#a5b40fc42cee62f2091d454f3e8026d47",tooltip="現在のロボットの状態を表すノードから，重心位置の候補地点を示す多角形を作成する"];
  Node18 -> Node19 [id="edge20_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="HexapodStateCalclator\l::getGlobalLegPos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a1c0a81291fc3bef841c6176c307a9312",tooltip="脚座標は脚の付け根を原点とした座標系なので，それをグローバル座標に変換する．"];
  Node18 -> Node14 [id="edge21_Node000018_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge22_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="ComSelecterHato::setCurrentNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_com_selecter_hato.html#a69a48f403a947d80ef20e4703cdfe260",tooltip="現在のノードを設定する"];
}
