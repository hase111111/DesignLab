digraph "GraphicMainTest::update"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="GraphicMainTest::update",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="描画画面の更新を行う．純粋仮想関数のため，継承先では必ずoverrideする必要がある．"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="SNode::changeGlobalCenter\lOfMass",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct_s_node.html#a76fd4ec299b81b6f7c1f274084236d8f",tooltip="重心位置を変更する関数．"];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="dl_leg::isGrounded",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__leg.html#ad9c7dd2eccb0f1660b81a56b17b889c3",tooltip="脚番号_leg_num 0 〜 5 に応じて，その脚が接地しているかを調べる． 脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．"];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="dl_leg::isAbleLegNum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__leg.html#ab2ec160a0610763bdbc702363c0c6267",tooltip="脚を表す番号は，右前脚を 0 として， 0 〜 5 の範囲．その範囲外ならばfalseを返す．"];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="HexapodStateCalclator\l::convertLocalLegPos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#ac36c8559001c9cd6ac0684069e4735ed",tooltip="第2引数の座標を現在の重心座標と回転から，脚の付け根を原点としたローカル座標に変換する．"];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="MapState::getDevideMapNumX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_state.html#aa774afefe0a0cbf9a7bf2f8633ea65a6",tooltip="グローバルのx座標の値から，m_devide_mapのどこをさしているか計算して返す．   範囲外の値を指定した場合は，0またはマップの端の座標を返す．"];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="MapState::getDevideMapNumY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_state.html#af032d022391628b0bcc6185ad02938aa",tooltip="グローバルのy座標の値から，m_devide_mapのどこをさしているか計算して返す．   範囲外の値を指定した場合は，0またはマップの端の座標を返す．"];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="HexapodStateCalclator\l::getGlobalLegBasePos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a939f73cf543fd9de5e7fe0320c3c4b6b",tooltip="脚位置は離散化されて制御されるが，その時の4の位置をグローバル座標で出力する．"];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Singleton\< Keyboard\l \>::getIns",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_singleton.html#a770513deea79541075e950e16d84c69a",tooltip="インスタンスを取得する． このクラスを継承したクラスは クラス名::getIns()-> の形式でメンバ関数を呼び出す．"];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="MapState::getPointNumFrom\lDevideMap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_state.html#afc4b1ab9248eb27e060296491ca898d7",tooltip="長方形状に切り分けられたマップから，脚設置可能点の数を取得する．   範囲外の値を指定した場合は，0を返す．"];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="MapState::getPosFromDevideMap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_state.html#ae499547ec5acd6bd2b254a22d8c16f88",tooltip="長方形状に切り分けられたマップから，脚設置可能点の実際の座標を取得する．   範囲外の値を指定した場合は，(0,0,0)を返す．"];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CameraManager::setCamera\lViewMode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_manager.html#a8396ca3c5c86d5f424ada31404d67e2e",tooltip="カメラのモードをセットする"];
  Node12 -> Node13 [id="edge12_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="dl_math::convertDegToRad",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__math.html#a9823c74b0c3ecbcd019cc5bb48845bbb",tooltip="角度をdegからradに変換する関数．"];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CameraManager::update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_manager.html#a9f222ea5e5833165ac98beda4a72bad9",tooltip="カメラの位置などの更新を行う．毎フレーム実行すること"];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="HexapodRenderer::update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_renderer.html#ad2973f80965df8a61bc5edf8e1b144cc",tooltip="ロボットの状態を更新する．"];
  Node15 -> Node16 [id="edge15_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="HexapodStateCalclator\l::calclateJointPos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#ab7061397f796eec14959072beee21526",tooltip="ノードの情報は現在の脚位置と重心位置しか持たないので，ジョイントがどこにあるかが分からない．よってこの関数で計算する．  三角関数を多く使用するので，計算量が多い．"];
}
