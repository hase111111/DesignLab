digraph "GraphicMainTest::draw"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="GraphicMainTest::draw",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="描画を行う．ここでは描画系の処理のみを行い内部のデータを更新しないためconstを付けている．純粋仮想関数．"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="MapRenderer::draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_renderer.html#ab8b1c4579492e8d74fb990d4d570656a",tooltip="マップの描画を行う．"];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="dl_dxlib::convertToDxVec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__dxlib.html#a5bb048927dd733ecc50f18acdd40a015",tooltip="Dxlibの座標を示すVECTORと，このプログラムで使用しているSVectorを変換する． ロボット座標系は右手座標系，Dxlibは左手座標系(工学は右手・ゲームライブラリは左手が多い気がする)なので..."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="dl_dxlib::drawCube3DWith\lTopPos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__dxlib.html#aa3743e969ae8717f2671b347ac650881",tooltip="3D空間に立方体を描画する．立方体の上面の中心の座標から描画する．"];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="dl_dxlib::drawCube3D",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__dxlib.html#affdd61c25200dc573bebd8d7296537c0",tooltip="3D空間に立方体を描画する．"];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="MapState::getDevideMapNumX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_state.html#aa774afefe0a0cbf9a7bf2f8633ea65a6",tooltip="グローバルのx座標の値から，m_devide_mapのどこをさしているか計算して返す．   範囲外の値を指定した場合は，0またはマップの端の座標を返す．"];
  Node2 -> Node7 [id="edge6_Node000002_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="MapState::getDevideMapNumY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_state.html#af032d022391628b0bcc6185ad02938aa",tooltip="グローバルのy座標の値から，m_devide_mapのどこをさしているか計算して返す．   範囲外の値を指定した場合は，0またはマップの端の座標を返す．"];
  Node2 -> Node8 [id="edge7_Node000002_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="HexapodStateCalclator\l::getGlobalLegPos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a1c0a81291fc3bef841c6176c307a9312",tooltip="脚座標は脚の付け根を原点とした座標系なので，それをグローバル座標に変換する．"];
  Node2 -> Node9 [id="edge8_Node000002_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="MapState::getPointNumFrom\lDevideMap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_state.html#afc4b1ab9248eb27e060296491ca898d7",tooltip="長方形状に切り分けられたマップから，脚設置可能点の数を取得する．   範囲外の値を指定した場合は，0を返す．"];
  Node2 -> Node10 [id="edge9_Node000002_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="MapState::getPosFromDevideMap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_map_state.html#ae499547ec5acd6bd2b254a22d8c16f88",tooltip="長方形状に切り分けられたマップから，脚設置可能点の実際の座標を取得する．   範囲外の値を指定した場合は，(0,0,0)を返す．"];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="HexapodRenderer::draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_renderer.html#ada03952583267029a71d57500ec11b70",tooltip="ロボットを3D空間に描画する．"];
  Node11 -> Node3 [id="edge11_Node000011_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node12 [id="edge12_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="dl_vec::SVector2::cross",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_vector2.html#aecae7306706543c778a096d2e522b56c",tooltip="このベクトルとotherの外積を返す"];
  Node11 -> Node13 [id="edge13_Node000011_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="dl_dxlib::drawHexagonalPrism",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__dxlib.html#aeb5d1c259d3ab9dc9ac17161a29a546e",tooltip="3D空間に六角柱を描画する．"];
  Node13 -> Node14 [id="edge14_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="dl_dxlib::drawHexagon",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__dxlib.html#a36b086b2d9269fe65393e37c76c675b2",tooltip="3D空間に六角形を描画する．"];
  Node11 -> Node15 [id="edge15_Node000011_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="HexapodStateCalclator\l::getGlobalLegBasePos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a939f73cf543fd9de5e7fe0320c3c4b6b",tooltip="脚位置は離散化されて制御されるが，その時の4の位置をグローバル座標で出力する．"];
  Node11 -> Node8 [id="edge16_Node000011_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node16 [id="edge17_Node000011_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="HexapodStateCalclator\l::isAblePause",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a5e34910a6da418efdc1e1632672f15e7",tooltip="転ばない姿勢かどうか調べる．"];
  Node16 -> Node12 [id="edge18_Node000016_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node17 [id="edge19_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="dl_leg::isGrounded",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$namespacedl__leg.html#ad9c7dd2eccb0f1660b81a56b17b889c3",tooltip="脚番号_leg_num 0 〜 5 に応じて，その脚が接地しているかを調べる． 脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．"];
  Node16 -> Node19 [id="edge20_Node000016_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="dl_vec::SVector::projectedXY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_vector.html#ab51d1e8d247fffbd26c1127be0976e43",tooltip="XY平面に射影したベクトルを返す．"];
  Node11 -> Node17 [id="edge21_Node000011_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node20 [id="edge22_Node000011_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="HexapodStateCalclator\l::isLegInRange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a44b81247eee6784742703a394716739d",tooltip="脚が可動範囲内かチェックする．速度重視のため，ざっくりとした計算を行う．"];
  Node20 -> Node21 [id="edge23_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="dl_vec::SVector2::length\lSquare",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structdl__vec_1_1_s_vector2.html#a0ae9aed0d5f24a33178262e127c628e8",tooltip="このベクトルの長さの2乗を返す"];
  Node20 -> Node19 [id="edge24_Node000020_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node23 [id="edge25_Node000020_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="dl_math::squared",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__math.html#a760dc9f3f17fe8b38291f79da372095b",tooltip="2乗した値を返す関数．"];
  Node11 -> Node24 [id="edge26_Node000011_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="HexapodStateCalclator\l::isLegInterfering",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a4b7626cfcaab44e79148c5f5b4acd30f",tooltip="脚の干渉をチェックする．"];
  Node24 -> Node25 [id="edge27_Node000024_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="dl_vec::SLine2::hasIntersection",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_line2.html#a0638a23cbcc936eb65e284ceca113702",tooltip="交点が存在しているかどうか調べる関数"];
  Node25 -> Node12 [id="edge28_Node000025_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node19 [id="edge29_Node000024_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node26 [id="edge30_Node000011_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="dl_vec::SVector::length",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_vector.html#ae3995a28af45772ee7593b40979e8561",tooltip="ベクトルの長さを返す．sqrt(ルートの計算)がまぁまぁ重いので，lengthSquareでいいならこっち使うべき．"];
  Node26 -> Node27 [id="edge31_Node000026_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="dl_vec::SVector::lengthSquare",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdl__vec_1_1_s_vector.html#a4420023e744314ef6d41f21fbd204150",tooltip="ベクトルの長さの2乗を返す．sqrt(ルートの計算)がまぁまぁ重いのでこっちを使えるなら使うべき．"];
  Node11 -> Node19 [id="edge32_Node000011_Node000019",color="steelblue1",style="solid",tooltip=" "];
}
