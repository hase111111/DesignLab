digraph "ComSelecterHato::getComFromPolygon"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="ComSelecterHato::getComFrom\lPolygon",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="重心を求める"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="my_vec::SPolygon2::\lgetVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structmy__vec_1_1_s_polygon2.html#a44f8ef9902e8d8cb28a739bbc30cefdd",tooltip="頂点の座標を返す関数"];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="my_vec::SPolygon2::\lgetVertexNum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structmy__vec_1_1_s_polygon2.html#a178e01b9175e47eed8f3ab893614f627",tooltip="多角形の頂点数を返す関数"];
  Node1 -> Node3 [id="edge3_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node4 [id="edge4_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="HexapodStateCalclator\l::isLegInRange",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_state_calclator.html#a44b81247eee6784742703a394716739d",tooltip="脚が可動範囲内かチェックする．速度重視のため，ざっくりとした計算を行う．"];
  Node4 -> Node5 [id="edge5_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="my_vec::SVector2::length\lSquare",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structmy__vec_1_1_s_vector2.html#a7fa50793aa9b2afa33a1a331169a56e3",tooltip="このベクトルの長さの2乗を返す"];
  Node5 -> Node6 [id="edge6_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="my_vec::SVector2::dot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structmy__vec_1_1_s_vector2.html#a5f60b944922624d5eda770ed4b9912b8",tooltip="このベクトルとotherの内積を返す"];
  Node4 -> Node7 [id="edge7_Node000004_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="my_vec::SVector::projectedXY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structmy__vec_1_1_s_vector.html#ada5408a85d72fdbf6ae0f5f6d42862f7",tooltip="XY平面に射影したベクトルを返す．"];
  Node4 -> Node8 [id="edge8_Node000004_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="my_math::squared",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacemy__math.html#aacc8f27ccee67f8dd99906b16d707769",tooltip="2乗した値を返す関数．"];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="my_vec::SVector2::normalized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structmy__vec_1_1_s_vector2.html#a6527b8515f1b2856db9eaa474daba95c",tooltip="このベクトルを正規化したベクトルを返す"];
  Node9 -> Node10 [id="edge10_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="my_vec::SVector2::length",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structmy__vec_1_1_s_vector2.html#a342ca71e3c0a99bef64622697c510560",tooltip="このベクトルの長さを返す"];
  Node10 -> Node5 [id="edge11_Node000010_Node000005",color="steelblue1",style="solid",tooltip=" "];
}
