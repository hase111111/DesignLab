digraph "GraphicMainAdvance::Update"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="GraphicMainAdvance\l::Update",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="描画画面の更新を行う．純粋仮想関数のため，継承先では必ずoverrideする必要がある．"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="InterpolatedNodeCreator\l::createInterpolatedNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_interpolated_node_creator.html#acc9e16ae23501fda19b769660249110d",tooltip="ノード間を補間する"];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="designlab::Vector3\l::IsZero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdesignlab_1_1_vector3.html#a1a61d0a698b66fe9a856d539cec42925",tooltip="x,y,zともに絶対値が許容誤差以下の値ならばtrueを返す．"];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="designlab::math_util\l::IsEqual",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedesignlab_1_1math__util.html#a44a42787b2445c454d3afed817c1769e",tooltip="C++において，小数同士の計算は誤差が出てしまう．誤差込みで値が等しいか調べる．"];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="DisplayNodeSwitchGui\l::getDisplayNodeNum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_display_node_switch_gui.html#aba245fa7f342e894f78d7d4a97534663",tooltip="現在表示するノードの番号を取得する"];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="Singleton\< Keyboard\l \>::GetIns",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_singleton.html#a91badcd3446f8897e73bd1af9c7a37ff",tooltip="インスタンスを取得する．   このクラスを継承したクラスは クラス名::getIns()-> の形式でメンバ関数を呼び出す．"];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="Keyboard::GetPressingCount",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_keyboard.html#a8bb5f43cc39e22349160068d5140e6f6",tooltip="keyCodeのキーが押されているフレーム数を取得する．"];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="HexapodRenderer::set\l_draw_node",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_hexapod_renderer.html#a0479959e5aaf9ff798e1b70d5fb09c2b",tooltip="ロボットの状態を更新する．"];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="MovementLocusRenderer\l::set_move_locus_point",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_movement_locus_renderer.html#a3bf0d1681937003b6be362f9b21a182e",tooltip="ロボットの移動軌跡を記録する．"];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="MovementLocusRenderer\l::set_simulation_end\l_indexes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_movement_locus_renderer.html#a3d4e8da28f0dfd1d6efdf91129f88570",tooltip="シミュレーションの終了点を取得する"];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="NodeDisplayGui::SetDisplayNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_node_display_gui.html#a56ab3862df5514b821aa916cfb48a35c",tooltip="表示するノードを設定する，その後関節の角度を計算し，セットする"];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="DisplayNodeSwitchGui\l::setGraphData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_display_node_switch_gui.html#ada40eaf26e259d8a3d29b03e538f9dbd",tooltip="GUIに表示するノードの情報を設定する"];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CameraGui::SetHexapodPos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_gui.html#a7e92e9302d05ea281203fc91a1108d16",tooltip="カメラが注視するロボットの座標を設定する"];
  Node13 -> Node14 [id="edge13_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CameraStateManager\l::SetTargetPos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_state_manager.html#adfcaa7e32758f9c1e9315359c72b7c4d",tooltip="カメラの注視する目標の座標をセットする   cameraのmodeがFREE_CONTROLLED_TARGETの時はセットできない"];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="RobotGraundPointRenderer\l::SetNodeAndSimulationEndNodeIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_robot_graund_point_renderer.html#a01fb9f551ecffb64bca5521a1de2af38",tooltip=" "];
  Node15 -> Node16 [id="edge15_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="dl_leg::IsGrounded",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedl__leg.html#af9f9b0788c3b3049e8bbf659df946c20",tooltip="脚番号 leg_index 0 〜 5 に応じて，その脚が接地しているかを調べる．   脚は右前脚を0番として，時計回りに0,1,2,3,4,5となる．左前足が5番．"];
  Node1 -> Node17 [id="edge16_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CameraGui::Update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_gui.html#a6acd3a19c988ec33ff84572a025ac2cd",tooltip="GUIやカメラの更新を行う"];
  Node17 -> Node18 [id="edge17_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CameraInputController\l::ChangeCameraState",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_input_controller.html#a56c0dbc23365b09d5d0c0349e880e16f",tooltip="キー入力でカメラを動かす．   基本的には毎フレーム呼び出す"];
  Node18 -> Node19 [id="edge18_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CameraStateManager\l::AddCameraToTargetLength",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_state_manager.html#ac0bc493a22d452063cc5da47544aa4be",tooltip="カメラの注視する目標の座標からカメラまでの距離を増やす"];
  Node18 -> Node20 [id="edge19_Node000018_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CameraStateManager\l::GetCameraRotQuat",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_state_manager.html#abdf3ab2caf3382767987f3f915481bfa",tooltip="カメラの回転を表すクォータニオンを取得する．"];
  Node18 -> Node21 [id="edge20_Node000018_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CameraStateManager\l::GetCameraViewMode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_state_manager.html#ae36d67f526d5a63ecae8acbefe8d990a",tooltip="カメラのモードを取得する"];
  Node18 -> Node22 [id="edge21_Node000018_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="Mouse::GetDiffPosX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_mouse.html#aadc3f80b56c350f368d46821d20a40d9",tooltip="マウスカーソルの移動量を取得する．X座標は画面の左端を0として，右向きが正．これはDxlibの仕様なので変更不能．"];
  Node18 -> Node23 [id="edge22_Node000018_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="Mouse::GetDiffPosY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_mouse.html#a80c810c534e31080c302866442848003",tooltip="マウスカーソルの移動量を取得する．Y座標は画面の上端を0として，下向きが正．これはDxlibの仕様なので変更不能．"];
  Node18 -> Node24 [id="edge23_Node000018_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="CameraStateManager\l::GetFreeTargetPos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_state_manager.html#ac19a039d496f5a6bc11c4e625ff1a19a",tooltip="注視点を操作する際の，カメラの注視する座標を取得する"];
  Node18 -> Node6 [id="edge24_Node000018_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node25 [id="edge25_Node000018_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="designlab::Quaternion\l::Normalize",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structdesignlab_1_1_quaternion.html#a7e53e5872a5a39da9cb6ca40a0c6e91a",tooltip="正規化したクォータニオンを返す   クォータニオンの正規化とは，ノルムを1にすること．   クォータニオンqの正規化は，q / |q| で求められる"];
  Node18 -> Node28 [id="edge26_Node000018_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="CameraStateManager\l::SetCameraRotQuat",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_state_manager.html#a0ef05c37acc23b23a58858e2dbf97f17",tooltip="カメラのクォータニオンをセットする"];
  Node18 -> Node29 [id="edge27_Node000018_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CameraStateManager\l::SetCameraViewMode",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_camera_state_manager.html#aad65bb6b1a42f7d6a41d265ecd324142",tooltip="カメラのモードをセットする．同時にカメラの目標回転角度などを設定する"];
  Node18 -> Node31 [id="edge28_Node000018_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="CameraStateManager\l::SetFreeTargetPos",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_state_manager.html#a908c226b9fa277d5eecb159dfa87e343",tooltip="注視点を操作する際の，カメラの注視する座標をセットする"];
  Node17 -> Node32 [id="edge29_Node000017_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="CameraStateManager\l::InitCaneraTargetLength",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_state_manager.html#ac39a76d8c5fb81635c6487eb04b117b8",tooltip="カメラと注視点との距離を初期化する"];
  Node17 -> Node29 [id="edge30_Node000017_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node33 [id="edge31_Node000017_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="CameraStateManager\l::Update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_camera_state_manager.html#a5030afa746bcf15ef63107c8d34712ee",tooltip="カメラの位置などの更新を行う．毎フレーム実行すること"];
  Node33 -> Node34 [id="edge32_Node000033_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="designlab::math_util\l::ApproachTarget",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedesignlab_1_1math__util.html#a0bb65d79aff7212b0ea64882f22b9b1b",tooltip="目標値に値を近づける関数．"];
  Node1 -> Node35 [id="edge33_Node000001_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="DisplayNodeSwitchGui\l::Update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_display_node_switch_gui.html#a27202e8cde3362192f45cb4c12afa168",tooltip="GUIの更新，毎フレーム実行すること"];
  Node1 -> Node36 [id="edge34_Node000001_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="NodeDisplayGui::Update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_node_display_gui.html#a01ad92aa11f9287596dc7890231eb9cd",tooltip="GUIのボタンの更新を行う"];
}
